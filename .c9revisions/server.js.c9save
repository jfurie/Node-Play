{"ts":1350856233259,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"// Fetch the site configuration\nvar siteConf = require('./lib/getConfig');\n\nprocess.title = siteConf.uri.replace(/http:\\/\\/(www)?/, '');\n\nvar airbrake;\nif (siteConf.airbrakeApiKey) {\n\tairbrake = require('airbrake').createClient(siteConf.airbrakeApiKey);\n}\n\nprocess.addListener('uncaughtException', function (err, stack) {\n\tconsole.log('Caught exception: '+err+'\\n'+err.stack);\n\tconsole.log('\\u0007'); // Terminal bell\n\tif (airbrake) { airbrake.notify(err); }\n});\n\nvar connect = require('connect');\nvar express = require('express');\nvar assetManager = require('connect-assetmanager');\nvar assetHandler = require('connect-assetmanager-handlers');\nvar notifoMiddleware = require('connect-notifo');\nvar DummyHelper = require('./lib/dummy-helper');\n\n// Session store\nvar RedisStore = require('connect-redis')(express);\nvar sessionStore = new RedisStore;\n\nvar app = module.exports = express.createServer();\napp.listen(siteConf.port, null);\n\n// Setup socket.io server\nvar socketIo = new require('./lib/socket-io-server.js')(app, sessionStore);\nvar authentication = new require('./lib/authentication.js')(app, siteConf);\n// Setup groups for CSS / JS assets\nvar assetsSettings = {\n\t'js': {\n\t\t'route': /\\/static\\/js\\/[a-z0-9]+\\/.*\\.js/\n\t\t, 'path': './public/js/'\n\t\t, 'dataType': 'javascript'\n\t\t, 'files': [\n\t\t\t'http://code.jquery.com/jquery-latest.js'\n\t\t\t, siteConf.uri+'/socket.io/socket.io.js' // special case since the socket.io module serves its own js\n\t\t\t, 'jquery.client.js'\n\t\t]\n\t\t, 'debug': true\n\t\t, 'postManipulate': {\n\t\t\t'^': [\n\t\t\t\tassetHandler.uglifyJsOptimize\n\t\t\t\t, function insertSocketIoPort(file, path, index, isLast, callback) {\n\t\t\t\t\tcallback(file.replace(/.#socketIoPort#./, siteConf.port));\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t}\n\t, 'css': {\n\t\t'route': /\\/static\\/css\\/[a-z0-9]+\\/.*\\.css/\n\t\t, 'path': './public/css/'\n\t\t, 'dataType': 'css'\n\t\t, 'files': [\n\t\t\t'reset.css'\n\t\t\t, 'client.css'\n\t\t]\n\t\t, 'debug': true\n\t\t, 'postManipulate': {\n\t\t\t'^': [\n\t\t\t\tassetHandler.fixVendorPrefixes\n\t\t\t\t, assetHandler.fixGradients\n\t\t\t\t, assetHandler.replaceImageRefToBase64(__dirname+'/public')\n\t\t\t\t, assetHandler.yuiCssOptimize\n\t\t\t]\n\t\t}\n\t}\n};\n// Add auto reload for CSS/JS/templates when in development\napp.configure('development', function(){\n\tassetsSettings.js.files.push('jquery.frontend-development.js');\n\tassetsSettings.css.files.push('frontend-development.css');\n\t[['js', 'updatedContent'], ['css', 'updatedCss']].forEach(function(group) {\n\t\tassetsSettings[group[0]].postManipulate['^'].push(function triggerUpdate(file, path, index, isLast, callback) {\n\t\t\tcallback(file);\n\t\t\tdummyHelpers[group[1]]();\n\t\t});\n\t});\n});\n\nvar assetsMiddleware = assetManager(assetsSettings);\n\n// Settings\napp.configure(function() {\n\tapp.set('view engine', 'ejs');\n\tapp.set('views', __dirname+'/views');\n});\n\n// Middleware\napp.configure(function() {\n\tapp.use(express.bodyParser());\n\tapp.use(express.cookieParser());\n\tapp.use(assetsMiddleware);\n\tapp.use(express.session({\n\t\t'store': sessionStore\n\t\t, 'secret': siteConf.sessionSecret\n\t}));\n\tapp.use(express.logger({format: ':response-time ms - :date - :req[x-real-ip] - :method :url :user-agent / :referrer'}));\n\tapp.use(authentication.middleware.auth());\n\tapp.use(authentication.middleware.normalizeUserData());\n\tapp.use(express['static'](__dirname+'/public', {maxAge: 86400000}));\n\n\t// Send notification to computer/phone @ visit. Good to use for specific events or low traffic sites.\n\tif (siteConf.notifoAuth) {\n\t\tapp.use(notifoMiddleware(siteConf.notifoAuth, { \n\t\t\t'filter': function(req, res, callback) {\n\t\t\t\tcallback(null, (!req.xhr && !(req.headers['x-real-ip'] || req.connection.remoteAddress).match(/192.168./)));\n\t\t\t}\n\t\t\t, 'format': function(req, res, callback) {\n\t\t\t\tcallback(null, {\n\t\t\t\t\t'title': ':req[x-real-ip]/:remote-addr @ :req[host]'\n\t\t\t\t\t, 'message': ':response-time ms - :date - :req[x-real-ip]/:remote-addr - :method :user-agent / :referrer'\n\t\t\t\t});\n\t\t\t}\n\t\t}));\n\t}\n});\n\n// ENV based configuration\n\n// Show all errors and keep search engines out using robots.txt\napp.configure('development', function(){\n\tapp.use(express.errorHandler({\n\t\t'dumpExceptions': true\n\t\t, 'showStack': true\n\t}));\n\tapp.all('/robots.txt', function(req,res) {\n\t\tres.send('User-agent: *\\nDisallow: /', {'Content-Type': 'text/plain'});\n\t});\n});\n// Suppress errors, allow all search engines\napp.configure('production', function(){\n\tapp.use(express.errorHandler());\n\tapp.all('/robots.txt', function(req,res) {\n\t\tres.send('User-agent: *', {'Content-Type': 'text/plain'});\n\t});\n});\n\n// Template helpers\napp.dynamicHelpers({\n\t'assetsCacheHashes': function(req, res) {\n\t\treturn assetsMiddleware.cacheHashes;\n\t}\n\t, 'session': function(req, res) {\n\t\treturn req.session;\n\t}\n});\n\n// Error handling\napp.error(function(err, req, res, next){\n\t// Log the error to Airbreak if available, good for backtracking.\n\tconsole.log(err);\n\tif (airbrake) { airbrake.notify(err); }\n\n\tif (err instanceof NotFound) {\n\t\tres.render('errors/404');\n\t} else {\n\t\tres.render('errors/500');\n\t}\n});\nfunction NotFound(msg){\n\tthis.name = 'NotFound';\n\tError.call(this, msg);\n\tError.captureStackTrace(this, arguments.callee);\n}\n\n// Routing\napp.all('/', function(req, res) {\n\t// Set example session uid for use with socket.io.\n\tif (!req.session.uid) {\n\t\treq.session.uid = (0 | Math.random()*1000000);\n\t}\n\tres.locals({\n\t\t'key': 'value'\n\t});\n\tres.render('index');\n});\n\n// Initiate this after all other routing is done, otherwise wildcard will go crazy.\nvar dummyHelpers = new DummyHelper(app);\n\n// If all fails, hit em with the 404\napp.all('*', function(req, res){\n\tthrow new NotFound;\n});\n\nconsole.log('Running in '+(process.env.NODE_ENV || 'development')+' mode @ '+siteConf.uri);"]],"start1":0,"start2":0,"length1":0,"length2":5628}]],"length":5628}
